"""
Django settings for halleluyah project.

Generated by 'django-admin startproject' using Django 1.10.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'y3xhjg4n2=+vr$!@4+@nqh^2vc(22&5c()ea7^@wd_cg1j5d^5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'api.apps.ApiConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'phonenumber_field',
    'sortedm2m',
    'separatedvaluesfield',
    'django_comments',
    'django.contrib.sites',
    'rest_framework', 
    'django_s3_storage',
    'sorl.thumbnail',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users. 
    'DEFAULT_PERMISSION_CLASSES': [
        #'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 2
}

ROOT_URLCONF = 'halleluyah.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'halleluyah.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'halleluyah',
        'USER': 'root',
        'PASSWORD': 'raspinosa',
        'HOST': 'localhost',
        'PORT': '3306',
        'OPTIONS': {
           'init_command': 'SET default_storage_engine=INNODB',
           'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    },
    'sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# The region to connect to when storing files.
AWS_REGION = "us-west-2"

# The AWS access key used to access the storage buckets.
AWS_ACCESS_KEY_ID = "AKIAITL2UH3XX5VPNKAA"

# The AWS secret access key used to access the storage buckets.
AWS_SECRET_ACCESS_KEY = "STT/fCnpttLhjZ0Av1eN6+26cqn25in2jKqAGm7N"

# The S3 bucket used to store uploaded files.
AWS_S3_BUCKET_NAME = "halleluyah"

# The S3 calling format to use to connect to the bucket.
AWS_S3_CALLING_FORMAT = "boto.s3.connection.OrdinaryCallingFormat"

# The host to connect to (only needed if you are using a non-AWS host)
AWS_S3_HOST = ""

# A prefix to add to the start of all uploaded files.
AWS_S3_KEY_PREFIX = ""

# Whether to enable querystring authentication for uploaded files.
AWS_S3_BUCKET_AUTH = False

# The expire time used to access uploaded files.
AWS_S3_MAX_AGE_SECONDS = 60*60  # 1 hour.

# A custom URL prefix to use for public-facing URLs for uploaded files.
AWS_S3_PUBLIC_URL = ""

# Whether to set the storage class of uploaded files to REDUCED_REDUNDANCY.
AWS_S3_REDUCED_REDUNDANCY = False

# A dictionary of additional metadata to set on the uploaded files.
# If the value is a callable, it will be called with the path of the file on S3.
AWS_S3_METADATA = {}

# Whether to enable gzip compression for uploaded files.
AWS_S3_GZIP = True

# The S3 bucket used to store static files.
AWS_S3_BUCKET_NAME_STATIC = "halleluyah-statics"

# The S3 calling format to use to connect to the static bucket.
AWS_S3_CALLING_FORMAT_STATIC = "boto.s3.connection.OrdinaryCallingFormat"

# The host to connect to for static files (only needed if you are using a non-AWS host)
AWS_S3_HOST_STATIC = ""

# Whether to enable querystring authentication for static files.
AWS_S3_BUCKET_AUTH_STATIC = False

# A prefix to add to the start of all static files.
AWS_S3_KEY_PREFIX_STATIC = ""

# The expire time used to access static files.
AWS_S3_MAX_AGE_SECONDS_STATIC = 60*60*24*365  # 1 year.

# A custom URL prefix to use for public-facing URLs for static files.
AWS_S3_PUBLIC_URL_STATIC = ""

# Whether to set the storage class of static files to REDUCED_REDUNDANCY.
AWS_S3_REDUCED_REDUNDANCY_STATIC = False

# A dictionary of additional metadata to set on the static files.
# If the value is a callable, it will be called with the path of the file on S3.
AWS_S3_METADATA_STATIC = {}

# Whether to enable gzip compression for static files.
AWS_S3_GZIP_STATIC = True

THUMBNAIL_FORCE_OVERWRITE = True
#AWS S3 File Storage
DEFAULT_FILE_STORAGE = "django_s3_storage.storage.S3Storage"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

#STATICFILES_STORAGE = "django_s3_storage.storage.StaticS3Storage"
STATIC_URL = '/static/'
